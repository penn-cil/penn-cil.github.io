<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Overview | Wisconsin Computational Intelligence Lab</title>
    <link>https://bdai6.github.io/courses/notes-on-hugo-academic/</link>
      <atom:link href="https://bdai6.github.io/courses/notes-on-hugo-academic/index.xml" rel="self" type="application/rss+xml" />
    <description>Overview</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><language>en-us</language><lastBuildDate>Fri, 09 Aug 2019 00:00:00 +0000</lastBuildDate>
    <image>
      <url>https://bdai6.github.io/img/logo.png</url>
      <title>Overview</title>
      <link>https://bdai6.github.io/courses/notes-on-hugo-academic/</link>
    </image>
    
    <item>
      <title>How to customize Academic website with Hugo</title>
      <link>https://bdai6.github.io/courses/notes-on-hugo-academic/customize-hugo/</link>
      <pubDate>Wed, 14 Aug 2019 00:00:00 +0100</pubDate>
      <guid>https://bdai6.github.io/courses/notes-on-hugo-academic/customize-hugo/</guid>
      <description>

&lt;p&gt;Here I will use one simple example to briefly show how to customize Academic theme with Hugo/Go programming. More information can be found from &lt;a href=&#34;https://gohugo.io&#34; target=&#34;_blank&#34;&gt;Hugo manual&lt;/a&gt;. Especially, &lt;a href=&#34;https://gohugo.io/templates/introduction/&#34; target=&#34;_blank&#34;&gt;Introduction to Hugo templating&lt;/a&gt;, &lt;a href=&#34;https://gohugo.io/functions/&#34; target=&#34;_blank&#34;&gt;Hugo functions&lt;/a&gt;, and &lt;a href=&#34;https://gohugo.io/variables/&#34; target=&#34;_blank&#34;&gt;Hugo variables&lt;/a&gt; are helpful for beginners.&lt;/p&gt;

&lt;h2 id=&#34;the-example&#34;&gt;The Example&lt;/h2&gt;

&lt;p&gt;Currently Academic lists everything (&lt;em&gt;posts&lt;/em&gt;, &lt;em&gt;publications&lt;/em&gt;, etc) written by the author all together under &lt;strong&gt;Latest&lt;/strong&gt; (see the screenshot below).
&lt;img src=&#34;https://bdai6.github.io/img/academic-default.png&#34; alt=&#34;default display&#34; title=&#34;Default&#34; /&gt;
Similar to &lt;a href=&#34;https://bromberglab.org/authors/yannick-mahlich/&#34; target=&#34;_blank&#34;&gt;this example&lt;/a&gt;, we would like to list and count these items in separate sections.
The list of latest work is controlled by &lt;code&gt;theme/academic/layouts/authors/list.html&lt;/code&gt;. So the question is how to modify the following code to achieve our goal.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;{{ $query := where .Pages &amp;quot;.IsNode&amp;quot; false }}
{{ $count := len $query }}
{{ if $count }}
    &amp;lt;div class=&amp;quot;article-widget&amp;quot;&amp;gt;
      &amp;lt;div class=&amp;quot;hr-light&amp;quot;&amp;gt;&amp;lt;/div&amp;gt;
      &amp;lt;h3&amp;gt;{{ i18n &amp;quot;user_profile_latest&amp;quot; | default &amp;quot;My Latest&amp;quot; }}&amp;lt;/h3&amp;gt;
      &amp;lt;ul&amp;gt;
        {{ range $query }}
        &amp;lt;li&amp;gt;
          &amp;lt;a href=&amp;quot;{{ .RelPermalink }}&amp;quot;&amp;gt;{{ .Title }}&amp;lt;/a&amp;gt;
        &amp;lt;/li&amp;gt;
        {{ end }}
      &amp;lt;/ul&amp;gt;
    &amp;lt;/div&amp;gt;
    {{ end }}
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;the-solution&#34;&gt;The solution&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;    {{/* List only publications */}}
    {{ $query := and (where .Pages &amp;quot;.IsNode&amp;quot; false) (where .Pages &amp;quot;Section&amp;quot; &amp;quot;publication&amp;quot;) }}
    {{ $count := len $query }}
    {{ if $count }}
    &amp;lt;div class=&amp;quot;article-widget&amp;quot;&amp;gt;
      &amp;lt;div class=&amp;quot;hr-light&amp;quot;&amp;gt;&amp;lt;/div&amp;gt;
      &amp;lt;h3&amp;gt;{{ printf &amp;quot;%s (%d)&amp;quot; (i18n &amp;quot;publications&amp;quot;) $count | default &amp;quot;Publications&amp;quot; }}&amp;lt;/h3&amp;gt;
      &amp;lt;ul&amp;gt;
        {{ range $query }}
        &amp;lt;li&amp;gt;
          &amp;lt;a href=&amp;quot;{{ .RelPermalink }}&amp;quot;&amp;gt;{{ .Title }}&amp;lt;/a&amp;gt;
        &amp;lt;/li&amp;gt;
        {{ end }}
      &amp;lt;/ul&amp;gt;
    &amp;lt;/div&amp;gt;
    {{ end }}

    {{/* List only posts */}}
    {{ $query := and (where .Pages &amp;quot;.IsNode&amp;quot; false) (where .Pages &amp;quot;Section&amp;quot; &amp;quot;post&amp;quot;) }}
    {{ $count := len $query }}
    {{ if $count }}
    &amp;lt;div class=&amp;quot;article-widget&amp;quot;&amp;gt;
      &amp;lt;div class=&amp;quot;hr-light&amp;quot;&amp;gt;&amp;lt;/div&amp;gt;
      &amp;lt;h3&amp;gt;{{ i18n &amp;quot;posts&amp;quot; | default &amp;quot;Posts&amp;quot;}}&amp;lt;/h3&amp;gt;
      &amp;lt;ul&amp;gt;
        {{ range $query }}
        &amp;lt;li&amp;gt;
          &amp;lt;a href=&amp;quot;{{ .RelPermalink }}&amp;quot;&amp;gt;{{ .Title }}&amp;lt;/a&amp;gt;
        &amp;lt;/li&amp;gt;
        {{ end }}
      &amp;lt;/ul&amp;gt;
    &amp;lt;/div&amp;gt;
    {{ end }}

    {{/* List only talks */}}
    {{ $query := and (where .Pages &amp;quot;.IsNode&amp;quot; false) (where .Pages &amp;quot;Section&amp;quot; &amp;quot;talk&amp;quot;) }}
    {{ $count := len $query }}
    {{ if $count }}
    &amp;lt;div class=&amp;quot;article-widget&amp;quot;&amp;gt;
      &amp;lt;div class=&amp;quot;hr-light&amp;quot;&amp;gt;&amp;lt;/div&amp;gt;
      &amp;lt;h3&amp;gt;{{ i18n &amp;quot;talks&amp;quot; | default &amp;quot;Talks&amp;quot;}}&amp;lt;/h3&amp;gt;
      &amp;lt;ul&amp;gt;
        {{ range $query }}
        &amp;lt;li&amp;gt;
          &amp;lt;a href=&amp;quot;{{ .RelPermalink }}&amp;quot;&amp;gt;{{ .Title }}&amp;lt;/a&amp;gt;
        &amp;lt;/li&amp;gt;
        {{ end }}
      &amp;lt;/ul&amp;gt;
    &amp;lt;/div&amp;gt;
    {{ end }}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Key points:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;https://gohugo.io/variables/page/#page-variables&#34; target=&#34;_blank&#34;&gt;Page variable&lt;/a&gt; &lt;code&gt;.IsNode&lt;/code&gt; always &lt;em&gt;false&lt;/em&gt; for regular content pages. So &lt;code&gt;where .Pages &amp;quot;.IsNode&amp;quot; false&lt;/code&gt; means finding all regular content pages.&lt;/li&gt;
&lt;li&gt;Then we use logic &lt;code&gt;and&lt;/code&gt; and &lt;code&gt;where .Pages &amp;quot;Section&amp;quot; &amp;quot;publication&amp;quot;&lt;/code&gt; to filter the result to get web pages that are &lt;em&gt;publications&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;i18n &amp;quot;user_profile_latest&amp;quot;&lt;/code&gt; corresponds to English expression &lt;code&gt;&amp;quot;Latest&amp;quot;&lt;/code&gt; according to &lt;code&gt;i18n/en.yaml&lt;/code&gt;. For listing publications only, it should be changed to &lt;code&gt;i18n &amp;quot;publications&amp;quot;&lt;/code&gt;, i.e., &lt;code&gt;&amp;quot;Publications&amp;quot;&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Use &lt;code&gt;printf &amp;quot;%s (%d)&amp;quot; (i18n &amp;quot;publications&amp;quot;) $count&lt;/code&gt; to concatenate &lt;code&gt;&amp;quot;Publications&amp;quot;&lt;/code&gt; and the number of publications.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;.Title&lt;/code&gt; corresponds to the title for this page.&lt;/li&gt;
&lt;/ol&gt;
</description>
    </item>
    
    <item>
      <title>Note on sourcethemes-academic</title>
      <link>https://bdai6.github.io/courses/notes-on-hugo-academic/my-notes/</link>
      <pubDate>Fri, 09 Aug 2019 00:00:00 +0100</pubDate>
      <guid>https://bdai6.github.io/courses/notes-on-hugo-academic/my-notes/</guid>
      <description>

&lt;p&gt;&lt;h2&gt;Table of Contents&lt;/h2&gt;
&lt;/p&gt;

&lt;h2 id=&#34;front-matter&#34;&gt;Front Matter&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://sourcethemes.com/academic/docs/front-matter/&#34; target=&#34;_blank&#34;&gt;reference documentation&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In the documentation and the example site, we will predominantly use YAML to format the front matter of &lt;em&gt;content&lt;/em&gt; files and TOML to format the &lt;em&gt;configuration&lt;/em&gt; files and &lt;em&gt;widget&lt;/em&gt; files.&lt;/p&gt;

&lt;p&gt;If a content file has front matter variables set between triple-minus &lt;code&gt;---&lt;/code&gt; lines, then it is YAML formatted. Otherwise, a content file will have front matter variables set between triple-plus &lt;code&gt;+++&lt;/code&gt; lines, indicating that it is TOML formatted.&lt;/p&gt;

&lt;h2 id=&#34;syntax-highlight&#34;&gt;Syntax highlight&lt;/h2&gt;

&lt;p&gt;Somehow syntax highlighting with &lt;span class=&#34;markup-quote&#34;&gt;```yaml&lt;/span&gt; doesn&amp;rsquo;t work, &lt;span class=&#34;markup-quote&#34;&gt;```json&lt;/span&gt; works instead.&lt;/p&gt;

&lt;p&gt;``` is highlighted by &lt;code&gt;{{&lt;/code&gt;&lt;code&gt;&amp;lt; hl &amp;gt;}&lt;/code&gt;&lt;code&gt;}the code to be highlighted{&lt;/code&gt;&lt;code&gt;{&amp;lt; hl &amp;gt;}&lt;/code&gt;&lt;code&gt;}&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id=&#34;create-a-non-widget-new-page&#34;&gt;Create a non-widget new page&lt;/h2&gt;

&lt;p&gt;By following &lt;a href=&#34;https://sourcethemes.com/academic/docs/managing-content/#create-a-page&#34; target=&#34;_blank&#34;&gt;the instruction&lt;/a&gt;, a new webpage is created by creating a folder with the new page&amp;rsquo;s name in &lt;code&gt;content&lt;/code&gt; and with &lt;code&gt;index.md&lt;/code&gt; inside. For example, I created a webpage called &lt;code&gt;cv&lt;/code&gt;.&lt;code&gt;cv&lt;/code&gt; is a folder within &lt;code&gt;content&lt;/code&gt; folder and it has &lt;code&gt;index.md&lt;/code&gt; inside. Below is the source code of &lt;code&gt;cv/index.md&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;---
title: Jing&#39;s CV
summary: test on how to add a page to your site.
date: &amp;quot;2019-08-09T00:00:00Z&amp;quot;

reading_time: false  # Show estimated reading time?
share: false  # Show social sharing links?
profile: false  # Show author profile?
comments: false  # Show comments?

# Optional header image (relative to `static/img/` folder).
header:
  caption: &amp;quot;&amp;quot;
  image: &amp;quot;&amp;quot;
---
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;cross-reference-and-link-in-markdown-and-shortcodes&#34;&gt;Cross-reference and link in Markdown and shortcodes&lt;/h2&gt;

&lt;p&gt;What I&amp;rsquo;d like to achieve is to cross-reference some content on my website) to another page. For example, to link &lt;code&gt;cv&lt;/code&gt; to this note. The &lt;a href=&#34;https://sourcethemes.com/academic/docs/managing-content/#linking-to-your-new-page&#34; target=&#34;_blank&#34;&gt;reference&lt;/a&gt; suggests using &lt;code&gt;[My CV](&lt;/code&gt;&lt;code&gt;{&lt;/code&gt;&lt;code&gt;{&lt;/code&gt;&lt;code&gt;&amp;lt; ref &amp;quot;cv/index.md&amp;quot;&lt;/code&gt; &lt;code&gt;&amp;gt;}})&lt;/code&gt;, and I found
&lt;code&gt;[My CV](/cv/)&lt;/code&gt; works too (&lt;a href=&#34;https://bdai6.github.io/cv/&#34;&gt;My CV&lt;/a&gt;). Similary, I can use &lt;a href=&#34;https://bdai6.github.io/publication/zha-2019-vlsic/&#34;&gt;my publication in VLSI&amp;rsquo;19&lt;/a&gt; with &lt;code&gt;[my publication in VLSI&#39;19](/publication/zha-2019-vlsic/)&lt;/code&gt;, where there is a &lt;code&gt;index.md&lt;/code&gt; file in &lt;code&gt;/publication/zha-2019-vlsic/&lt;/code&gt;;  or &lt;code&gt;[my research](/research/)&lt;/code&gt; &amp;ndash; &lt;a href=&#34;https://bdai6.github.io/research/&#34;&gt;my research&lt;/a&gt;, &lt;code&gt;[a project](/project/augmenting-computer-system)&lt;/code&gt; &amp;ndash; &lt;a href=&#34;https://bdai6.github.io/project/augmenting-computer-system&#34;&gt;a project&lt;/a&gt;, &lt;a href=&#34;https://bdai6.github.io/courses/example&#34;&gt;a course&lt;/a&gt;, &lt;a href=&#34;https://bdai6.github.io/post/getting-started/&#34;&gt;a post&lt;/a&gt;, etc, &lt;em&gt;as long as there is a &lt;code&gt;index.md&lt;/code&gt; or &lt;code&gt;_index.md&lt;/code&gt; in the folder&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Paths without a leading &lt;code&gt;/&lt;/code&gt; will first be tried resolved relative to the current page&lt;/strong&gt;. Therefore the &lt;strong&gt;URL should start with a &lt;code&gt;/&lt;/code&gt;&lt;/strong&gt; which will casue it to &lt;em&gt;correctly&lt;/em&gt; concatenate itself with the root domain of your baseURL defined in &lt;code&gt;config.toml&lt;/code&gt; &amp;ndash; &lt;code&gt;localhost:1313/post/getting-started/&lt;/code&gt; in developer mode, rather than &lt;code&gt;localhost:1313/&amp;lt;address of this note&amp;gt;/post/getting-started/&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Read &lt;a href=&#34;https://gohugo.io/content-management/cross-references/&#34; target=&#34;_blank&#34;&gt;more&lt;/a&gt; on using shortcodes for cross-reference.&lt;/p&gt;

&lt;h2 id=&#34;create-a-publication&#34;&gt;Create a publication&lt;/h2&gt;

&lt;p&gt;Refer to &lt;a href=&#34;https://sourcethemes.com/academic/docs/managing-content/#create-a-publication&#34; target=&#34;_blank&#34;&gt;this instruction&lt;/a&gt;. The automatic import function is:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;academic import --bibtex &amp;lt;path_to_your/publications.bib&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Just need to make sure that the .bib file is named to be &lt;strong&gt;publications.bib&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;If there are some typos in the auto generated publication, or if you want to update some details about the publication, you should edit the parameters in &lt;code&gt;content/publication/&amp;lt;my-publication&amp;gt;/index.md&lt;/code&gt;.&lt;/p&gt;

&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    &lt;code&gt;academic&lt;/code&gt; package is cross-platform and can be installed with the same command &lt;code&gt;pip3 install -U academic&lt;/code&gt; on Windows and macOS. However, somehow &lt;strong&gt;v0.2.7&lt;/strong&gt; is installed on Windows while &lt;strong&gt;v0.4.0&lt;/strong&gt; on macOS. The most distinct difference between the two versions are: v0.2.7 converts bib file to TOML format for Hugo while v0.4.0 YAML. Currently academic handles publication/talk/post webpage in &lt;strong&gt;YAML&lt;/strong&gt;, so this convertion job should be conducted on macOS.
  &lt;/div&gt;
&lt;/div&gt;

&lt;h3 id=&#34;other-approaches&#34;&gt;Other approaches&lt;/h3&gt;

&lt;p&gt;I wrote a &lt;a href=&#34;https://github.com/bdai6/parse_bib.git&#34; target=&#34;_blank&#34;&gt;custom python code&lt;/a&gt; based on &lt;code&gt;apetros/parse_bib&lt;/code&gt; and &lt;a href=&#34;https://github.com/sciunto-org/python-bibtexparser.git&#34; target=&#34;_blank&#34;&gt;bibtexparser&lt;/a&gt;. It was able to create publication pages with more details than the method menthioned above.&lt;/p&gt;

&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    Bib items with lines commented out by &lt;code&gt;%&lt;/code&gt; will be ignored by &lt;code&gt;bibtexparser&lt;/code&gt;, so will by the Academic buildin tool. So make sure to clean up the bib file before running the script.
  &lt;/div&gt;
&lt;/div&gt;

&lt;h2 id=&#34;create-table-of-contents&#34;&gt;Create Table of Contents&lt;/h2&gt;

&lt;p&gt;Use the &lt;code&gt;{&lt;/code&gt;&lt;code&gt;{% toc %\}&lt;/code&gt;&lt;code&gt;}&lt;/code&gt; shortcode anywhere you wish within your Markdown content to automatically generate a table of contents. For example, refer to the &lt;a href=&#34;#table-of-contents&#34;&gt;top of the page&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&#34;what-shortcodes-can-do&#34;&gt;What shortcodes can do&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://gohugo.io/content-management/shortcodes/&#34; target=&#34;_blank&#34;&gt;Shortcodes&lt;/a&gt; are plugins which are bundled with Academic or inherited from Hugo. From previous sections, we can see that sometimes it is not as straighforward as Markdown for example in dealing with &lt;a href=&#34;#cross-reference-and-link-in-markdown-and-shortcodes&#34;&gt;links&lt;/a&gt;. But it is actually more flexible and powerful, as we saw in the examples of  &lt;a href=&#34;#syntax-highlight&#34;&gt;highlighting&lt;/a&gt; and &lt;a href=&#34;#create-table-of-contents&#34;&gt;table of contents&lt;/a&gt;, etc. One more example,
&lt;code&gt;{&lt;/code&gt;&lt;code&gt;{% staticref &amp;quot;files/CV-JingLi.pdf&amp;quot; &amp;quot;newtab&amp;quot; %}&lt;/code&gt;&lt;code&gt;}Download my CV{&lt;/code&gt;&lt;code&gt;{% /staticref %}&lt;/code&gt;&lt;code&gt;}&lt;/code&gt; is able to open a new tab for &lt;a href=&#34;https://bdai6.github.io/files/CV-JingLi.pdf&#34; target=&#34;_blank&#34;&gt;Download my CV&lt;/a&gt;, while &lt;code&gt;[Download my CV](/files/CV-JingLi.pdf)&lt;/code&gt; cannot.&lt;/p&gt;

&lt;p&gt;Some more examples can be found &lt;a href=&#34;https://sourcethemes.com/academic/docs/writing-markdown-latex/&#34; target=&#34;_blank&#34;&gt;here&lt;/a&gt; and &lt;a href=&#34;https://gohugo.io/content-management/shortcodes/#use-hugo-s-built-in-shortcodes&#34; target=&#34;_blank&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;&amp;lt;a href=&amp;quot;/files/cv.pdf&amp;quot; target=&amp;quot;_blank&amp;quot;&amp;gt;Download my CV&amp;lt;/a&amp;gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;[A publication](https://bdai6.github.io/publication/zha-2019-vlsic/)&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;[My CV](https://bdai6.github.io/cv/)&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&#34;more-on-shortcodes&#34;&gt;More on shortcodes&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Syntax of shortcodes&lt;/strong&gt;: &lt;code&gt;{&lt;/code&gt;&lt;code&gt;{% shortcodename parameters %}&lt;/code&gt;&lt;code&gt;}&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;ref&lt;/code&gt; and &lt;code&gt;relref&lt;/code&gt; will look up the pages by their relative path (e.g., &lt;code&gt;blog/post.md&lt;/code&gt;) or their logical name (&lt;code&gt;post.md&lt;/code&gt;) and return the &lt;em&gt;absolute&lt;/em&gt; permalink (&lt;code&gt;ref&lt;/code&gt;) or &lt;em&gt;relative&lt;/em&gt; permalink (&lt;code&gt;relref&lt;/code&gt;) for the found page.&lt;/p&gt;

&lt;h2 id=&#34;deploy-generated-website-to-git-pages&#34;&gt;Deploy generated website to Git Pages&lt;/h2&gt;

&lt;p&gt;Before running &lt;code&gt;hugo&lt;/code&gt; and &lt;code&gt;push&lt;/code&gt; the generated website html code from &lt;code&gt;public&lt;/code&gt; to &lt;code&gt;&amp;lt;user-name&amp;gt;.github.io&lt;/code&gt;, we should do &lt;code&gt;cd publkic&lt;/code&gt; and use &lt;code&gt;rm -rf *&lt;/code&gt; to remove everything in &lt;code&gt;public&lt;/code&gt; folder, as &lt;code&gt;hugo&lt;/code&gt; does NOT clear all the previous generated files.&lt;/p&gt;

&lt;h2 id=&#34;publications-and-other-content-are-not-sorted-by-newest-first&#34;&gt;Publications and other content are not sorted by newest first&lt;/h2&gt;

&lt;p&gt;Hugo/TOML require that the value for the date field should be in &lt;a href=&#34;https://github.com/toml-lang/toml#local-date-time&#34; target=&#34;_blank&#34;&gt;TOML format&lt;/a&gt;, as per frontmatter of the &lt;code&gt;content/publication/&lt;/code&gt; files in the example site. If you want to use a partial date, such as year, you should still complete a full date to make a valid TOML date format.&lt;/p&gt;

&lt;h2 id=&#34;insert-an-image-with-markdown&#34;&gt;Insert an image with Markdown&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Image with title:
&lt;code&gt;![WiCIL logo](/img/icon-192.png &amp;quot;Title: WiCIL logo&amp;quot;)&lt;/code&gt;
&lt;img src=&#34;https://bdai6.github.io/img/icon-192.png&#34; alt=&#34;WiCIL logo&#34; title=&#34;Title: WiCIL logo&#34; /&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Image with caption:
&lt;code&gt;![WiCIL logo](/img/icon-192.png &amp;quot;Title: WiCIL logo&amp;quot;)*Caption: WiCIL logo*&lt;/code&gt;
&lt;img src=&#34;https://bdai6.github.io/img/icon-192.png&#34; alt=&#34;WiCIL logo&#34; title=&#34;Title: WiCIL logo&#34; /&gt;&lt;em&gt;Caption: WiCIL logo&lt;/em&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Image with title, caption, and &lt;strong&gt;clickable link&lt;/strong&gt;:
&lt;code&gt;[![WiCIL logo](/img/icon-192.png &amp;quot;Title: WiCIL logo&amp;quot;)*Caption: WiCIL logo*](/#research)&lt;/code&gt;
&lt;a href=&#34;https://bdai6.github.io/#research&#34;&gt;&lt;img src=&#34;https://bdai6.github.io/img/icon-192.png&#34; alt=&#34;WiCIL logo&#34; title=&#34;Title: WiCIL logo&#34; /&gt;&lt;em&gt;Caption: WiCIL logo&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code&gt;*Caption: WiCIL logo*&lt;/code&gt; can be removed without affecting the link. This code is essentially achieved by nesting two markdown commands, i.e., &lt;em&gt;image&lt;/em&gt; &lt;code&gt;![]()&lt;/code&gt; &lt;em&gt;within link&lt;/em&gt; &lt;code&gt;[]()&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id=&#34;lists-with-markdown&#34;&gt;Lists with Markdown&lt;/h2&gt;

&lt;p&gt;A numbered list is created by&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;1. First
2. Second
  1. alpha
  2. beta
3. Third
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Actually automatic increment of numbers can be achived by&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;1. First
1. Second
  1. alpha
  1. beta
1. Third
&lt;/code&gt;&lt;/pre&gt;

&lt;ol&gt;
&lt;li&gt;First&lt;/li&gt;
&lt;li&gt;Second

&lt;ol&gt;
&lt;li&gt;alpha&lt;/li&gt;
&lt;li&gt;beta&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;li&gt;Third&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&#34;associate-post-publication-and-talk-with-projects&#34;&gt;Associate Post, Publication, and Talk with projects&lt;/h2&gt;

&lt;p&gt;In the front matter of &lt;code&gt;index.md&lt;/code&gt; of a &lt;em&gt;post, publication&lt;/em&gt;, or &lt;em&gt;talk&lt;/em&gt;, set &lt;code&gt;projects: [&amp;quot;project1&amp;quot;, &amp;quot;project2&amp;quot;]&lt;/code&gt;. Make sure each item must match a project filename exactly (without file extension) for a link to be generated. Refer to &lt;code&gt;content\publication\zha-2019-vlsic\index.md&lt;/code&gt; for example.&lt;/p&gt;

&lt;p&gt;Similarly, a publication can associate with Markdown slides. Set &lt;code&gt;slides: &amp;quot;slide-name&amp;quot;&lt;/code&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>How to create an image gallery</title>
      <link>https://bdai6.github.io/courses/notes-on-hugo-academic/create-gallery/</link>
      <pubDate>Fri, 09 Aug 2019 00:00:00 +0100</pubDate>
      <guid>https://bdai6.github.io/courses/notes-on-hugo-academic/create-gallery/</guid>
      <description>

&lt;p&gt;&lt;h2&gt;Table of Contents&lt;/h2&gt;
HAHAHUGOSHORTCODE-TOC0-HBHB&lt;/p&gt;

&lt;h2 id=&#34;goals&#34;&gt;Goals&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;d like to create an image gallery with the following requirement:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Display a collection of images (such as logos of sponsors) in the &lt;em&gt;home page&lt;/em&gt;. The source code therefore will be inside a &lt;em&gt;widget page&lt;/em&gt; in &lt;code&gt;content/home&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Height, width, and spacing of the images can be custom defined.&lt;/li&gt;
&lt;li&gt;Able to automatically generate a gallery of all images in a directory.&lt;/li&gt;
&lt;li&gt;(Optional) Captions appear upon hovering over the image.&lt;/li&gt;
&lt;li&gt;(Optional) Clicking on an image will open an associated URL.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&#34;current-solutions-and-issues&#34;&gt;Current solutions and issues&lt;/h2&gt;

&lt;h3 id=&#34;for-non-hompage&#34;&gt;For non- hompage&lt;/h3&gt;

&lt;p&gt;The instruction in &lt;a href=&#34;https://sourcethemes.com/academic/docs/writing-markdown-latex/#image-gallery&#34; target=&#34;_blank&#34;&gt;sourcethemes.com&lt;/a&gt; works for &lt;code&gt;yaml&lt;/code&gt; format. One example is in &lt;code&gt;content/post/getting-started/index.md&lt;/code&gt;. To make it work, place images in a folder named &lt;code&gt;gallery&lt;/code&gt;, then place the folder to a project/post/etc folder. And in the main body of the &lt;code&gt;index.md&lt;/code&gt; insert &lt;code&gt;{{&lt;/code&gt;&lt;code&gt;&amp;lt; gallery &amp;gt;&lt;/code&gt;&lt;code&gt;}}&lt;/code&gt; command. You can also include the following lines to the &lt;em&gt;front matter&lt;/em&gt; to insert captions for the images.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;gallery_item:
- album: gallery
  caption: Default
  image: theme-default.png
---
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The problem is there is no way to control the placement or the size of the inserted images.&lt;/p&gt;

&lt;h3 id=&#34;for-homepage&#34;&gt;For homepage&lt;/h3&gt;

&lt;p&gt;The aforementioned method only works for &lt;code&gt;yaml&lt;/code&gt; format, while the widget page (&lt;em&gt;homepage&lt;/em&gt;) uses &lt;code&gt;toml&lt;/code&gt;. To make it work, it turned out I had to follow &lt;a href=&#34;https://github.com/gcushen/hugo-academic/issues/398#issuecomment-357444202&#34; target=&#34;_blank&#34;&gt;this instruction&lt;/a&gt; to create a gallery. The following lines are in the front matter of &lt;code&gt;sponsers.md&lt;/code&gt;. Refer to &lt;a href=&#34;https://bdai6.github.io/#sponsors&#34;&gt;Sponsers&lt;/a&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-toml&#34;&gt; # Gallery
[[gallery_item]]
album = &amp;quot;sponsors&amp;quot;
image = &amp;quot;darpa.jpg&amp;quot;
caption = &amp;quot;DARPA&amp;quot;
+++
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Images are uploaded to &lt;code&gt;content/img&lt;/code&gt; (if not referencing image URLs
). And gallary is initialized in &lt;code&gt;sponsor.md&lt;/code&gt; main body using &lt;code&gt;{&lt;/code&gt;&lt;code&gt;{&amp;lt; gallery album=&amp;quot;sponsors&amp;quot; &amp;gt;}&lt;/code&gt;&lt;code&gt;}&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Evidently from &lt;a href=&#34;https://bdai6.github.io/#sponsors&#34;&gt;Sponsers&lt;/a&gt;, we have to manually enter each &lt;code&gt;gallery_item&lt;/code&gt;. It is true that we can write a simple python script to automate the operation, but &lt;em&gt;the images in this gallery are not well aligned&lt;/em&gt;, and &lt;em&gt;the sizes cannot be adjusted&lt;/em&gt;.&lt;/p&gt;

&lt;h2 id=&#34;hugo-easy-gallery&#34;&gt;Hugo Easy Gallery&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://www.liwen.id.au/heg/&#34; target=&#34;_blank&#34;&gt;Hugo Easy Gallery&lt;/a&gt; claims to address all the issues above. And I plan to give it a try. The source code is &lt;a href=&#34;https://github.com/bdai6/hugo-easy-gallery&#34; target=&#34;_blank&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&#34;installation-instruction&#34;&gt;Installation instruction&lt;/h3&gt;

&lt;h4 id=&#34;add-to-my-website-as-a-submodule&#34;&gt;add to my_website as a submodule&lt;/h4&gt;

&lt;p&gt;&lt;code&gt;git submodule add -f -b master https://github.com/bdai6/hugo-easy-gallery.git hugo-easy-gallery&lt;/code&gt;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
